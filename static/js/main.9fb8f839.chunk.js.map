{"version":3,"sources":["assets/music.mp3","assets/sound.svg","assets/play.svg","assets/stop.svg","assets/line.svg","assets/line3.svg","assets/line2.svg","CDPlayer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","voice","init","cycleState","playState","audio","CDPlayer","props","addAudioComponent","mp3","document","createElement","src","volume","setState","play","state","pause","cycle","getCycleState","afterStyle","innerHTML","head","appendChild","border","transform","backgroundColor","getPlayAnimation","animation","voiceValue","getElementById","value","this","musicName","author","className","rightLine","alt","style","animationPlayState","leftLine","left2Line","onClick","width","height","borderRadius","visibility","fontSize","fontWeight","id","type","min","max","onChange","sound","marginLeft","React","Component","clockState","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9fb8f839.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/music.cc723b56.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sound.d3cc93dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.c363353e.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop.a54fda48.svg\";","module.exports = __webpack_public_path__ + \"static/media/line.1482722a.svg\";","module.exports = __webpack_public_path__ + \"static/media/line3.f311fb90.svg\";","module.exports = __webpack_public_path__ + \"static/media/line2.31778624.svg\";","import React from 'react';\r\nimport './CDPlayer.css';\r\nimport sound from './assets/sound.svg';\r\nimport play from './assets/play.svg';\r\nimport pause from './assets/stop.svg';\r\nimport rightLine from './assets/line.svg';\r\nimport leftLine from './assets/line3.svg';\r\nimport left2Line from './assets/line2.svg';\r\n\r\nconst initialState = {\r\n  voice: 50,\r\n  init: true,\r\n  cycleState: false,\r\n  playState: false,\r\n  audio: null\r\n};\r\n\r\nclass CDPlayer extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.addAudioComponent();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const {audio} = this.state;\r\n    audio.pause();\r\n  }\r\n\r\n  //加入音訊\r\n  addAudioComponent = () => {\r\n    const {mp3} = this.props;\r\n    const audio = document.createElement(\"audio\");\r\n    audio.src = mp3;\r\n    audio.volume = 0.5;\r\n    this.setState({audio: audio});\r\n  }\r\n\r\n  //mp3播放&暫停按鈕\r\n  play = () => {\r\n    const {playState, audio, init} = this.state;\r\n    if(init) {\r\n      this.setState({init: false});\r\n    }\r\n    if (playState) {\r\n      audio.pause();\r\n      this.setState({playState: false});\r\n    } else {\r\n      audio.play();\r\n      this.setState({playState: true});\r\n    }\r\n  }\r\n\r\n  //mp3循環按鈕\r\n  cycle = () => {\r\n    const {cycleState} = this.state;\r\n    if (cycleState) {\r\n      this.setState({cycleState: false});\r\n    } else {\r\n      this.setState({cycleState: true});\r\n    }\r\n  }\r\n\r\n  //mp3循環按鈕style\r\n  getCycleState = () => {\r\n    const {cycleState} = this.state;\r\n    if (cycleState) {\r\n     const afterStyle = document.createElement('style');\r\n     afterStyle.innerHTML = '.cycleButton:after{visibility: hidden}';\r\n     document.head.appendChild(afterStyle);\r\n      return {\r\n        border: '4px solid #000',\r\n        transform: 'translate(3px, 2px)',\r\n        backgroundColor:'#E0E0E0'\r\n      };\r\n    } else {\r\n      const afterStyle = document.createElement('style');\r\n      afterStyle.innerHTML = '.cycleButton:after{visibility: visible}';\r\n      document.head.appendChild(afterStyle);\r\n      return {\r\n        backgroundColor:'white'\r\n      };\r\n    }\r\n  }\r\n\r\n  getPlayAnimation = () => {\r\n    const {playState, init} = this.state;\r\n    if(!init){\r\n      if(playState){\r\n        return {\r\n          animation: 'forwards playAnimation 0.2s linear'\r\n        };\r\n      }\r\n      return {\r\n        animation: 'stopAnimation 0.2s linear'\r\n      };\r\n    }\r\n  }\r\n\r\n  //控制聲音\r\n  voice = () =>{\r\n    const {audio} = this.state;\r\n    const voiceValue = document.getElementById(\"voice\");\r\n    audio.volume = voiceValue.value/100;\r\n    this.setState({voice: voiceValue.value});\r\n  }\r\n\r\n\r\n  render() {\r\n    const {playState, cycleState, voice} = this.state;\r\n    const {musicName, author} = this.props;\r\n    return (\r\n        <div className='main'>\r\n            <div className='player'> \r\n                <div className='CDBlock'>\r\n                    <div><img className='rightLine' src={rightLine} alt=\"logo\" style={{animationPlayState: playState? 'running':'paused'}} /></div>\r\n                    <div className='CD' style={{animationPlayState: playState? 'running':'paused'}}>\r\n                        <div className='CDCenter'/>\r\n                    </div>\r\n                    <div><img className='leftLine' src={leftLine} alt=\"logo\" style={{animationPlayState: playState? 'running':'paused'}} /></div>\r\n                    <div><img className='leftLine' src={left2Line} alt=\"logo\" style={{animationPlayState: playState? 'running':'paused'}} /></div>\r\n                    <div className='buttons'>\r\n                      <div>\r\n                        <div className='nextButton'/>\r\n                        <div className='lastButton'/>\r\n                      </div>\r\n                      <div className='cycleBlock'>\r\n                        <div className='cycleButton' \r\n                          onClick={this.cycle} style={this.getCycleState()} />  \r\n                         <div style={{width:'10px', height:'10px', backgroundColor:'black', borderRadius: '100%', visibility: cycleState? 'visible': 'hidden'}} />  \r\n                      </div>\r\n                    </div>\r\n                </div>\r\n                <div className='controlBlock'>\r\n                    <div>\r\n                      <div className='controlVoiceBlock'>\r\n                        <div className='musicInfo'>\r\n                          <div style={{fontSize:'24px', fontWeight:'bolder'}}>{musicName}</div>\r\n                          <div>{author}</div>\r\n                        </div>\r\n                        <div  className='playerComponentBlock'>\r\n                          <div className='playButton' onClick={this.play}>\r\n                            <img src={playState ? play: pause} className='playButtonImg' alt=\"logo\" />\r\n                          </div>\r\n                          <div className='playerComponent' \r\n                            style={this.getPlayAnimation()}/>\r\n                        </div>\r\n                        <div className= 'controlSound'>\r\n                          <input id='voice' className='slider' type=\"range\" min=\"0\" max=\"100\" value={voice} onChange={this.voice}/>\r\n                          <img src={sound} style={{width:'25px', height: '25px', marginLeft: '5px'}}></img>\r\n                        </div>\r\n                      </div>\r\n                      <div className='controlmusicBlock'>\r\n                        <input className='musicSlider' type=\"range\" min=\"0\" max=\"100\" value='50'/>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default CDPlayer;","import React from 'react';\nimport mp3 from './assets/music.mp3';\nimport CDPlayer from './CDPlayer';\nimport './App.css';\n\nconst initialState = {\n  clockState: true\n};\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n\n  render() {\n    return (\n      <div className='App'>\n        <CDPlayer mp3= {mp3} musicName= {'黑色幽默'} author= {'周杰倫'}/>\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}